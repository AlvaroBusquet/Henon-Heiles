import numpy as np
from math import *
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import *

def Vp(r,theta): #V=V(r,theta)
    return (1/2)*r**2 + (np.sin(theta)*(np.cos(theta)**2) - (1/3)*np.sin(theta)**3)*r**3

a=np.linspace(0,1,50) #conjunto de pontos para teste em R
b=np.linspace(0,2*np.pi,50) #conjunto de pontos para teste em Theta
r=[] #vetor com valores de raio
th=[] #vetor com valores de angulo

for i in range(0,len(a)-1): #varredura de a
    for j in range(0,len(b)-1): #varredura de b
        if (Vp(a[i],b[j])<=0.16): #condicao para aceitar pontos segundo o potencial
            r.append(a[i]) #construcao do vetor raio
            th.append(b[i]) #construcao do vetor theta
    if (a[i]==0): #condicao para aceitar apenas uma condicao na origem, nao 
        continue
        
#print(len(a))
print(r,th)
